<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta http-equiv="Content-Language" content="en" />
<meta http-equiv="Content-Style-Type" content="text/css" />
<meta http-equiv="Content-Script-Type" content="text/javascript" />
<title>Using Oracle Precompilers and the Oracle Call Interface</title>
<meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Version 5.1.2 Build 020" />
<meta name="Date" content="2011-03-24T3:32:27Z" />
<meta name="robots" content="all" scheme="http://www.robotstxt.org/" />
<meta name="doctitle" content="Oracle&reg; Database Administrator's Reference 11g Release 2 (11.2) for Linux and UNIX-Based Operating Systems" />
<meta name="partno" content="E10839-14" />
<meta name="docid" content="UNXAR" />
<link rel="Start" href="../../index.htm" title="Home" type="text/html" />
<link rel="Copyright" href="../../dcommon/html/cpyr.htm" title="Copyright" type="text/html" />
<link rel="Stylesheet" href="../../dcommon/css/blafdoc.css" title="Default" type="text/css" />
<script type="text/javascript" src="../../dcommon/js/doccd.js">
</script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html" />
<link rel="Index" href="index.htm" title="Index" type="text/html" />
<link rel="Prev" href="cnfg_net_srv.htm" title="Previous" type="text/html" />
<link rel="Next" href="ldr_demo.htm" title="Next" type="text/html" />
<link rel="alternate" href="../e10839.pdf" title="PDF version" type="application/pdf" />
</head>
<body>
<div class="header">
<div class="zz-skip-header"><a name="top" id="top" href="#BEGIN">Skip Headers</a></div>
<table class="simple oac_no_warn" summary="" cellspacing="0" cellpadding="0" width="100%">
<tr>
<td align="left" valign="top"><b>Oracle&reg; Database Administrator's Reference<br />
11<i>g</i> Release 2 (11.2) for Linux and UNIX-Based Operating Systems</b><br />
Part Number E10839-14</td>
<td valign="bottom" align="right">
<table class="icons oac_no_warn" summary="" cellspacing="0" cellpadding="0" width="245">
<tr>
<td align="center" valign="top"><a href="../../index.htm"><img width="24" height="24" src="../../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td align="center" valign="top"><a href="../../nav/portal_booklist.htm"><img width="24" height="24" src="../../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td align="center" valign="top"><a href="toc.htm"><img width="24" height="24" src="../../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td align="center" valign="top"><a href="index.htm"><img width="24" height="24" src="../../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td align="center" valign="top"><a href="../../dcommon/html/feedback.htm"><img width="24" height="24" src="../../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
<hr />
<table class="simple oac_no_warn" summary="" cellspacing="0" cellpadding="0" width="100%">
<tr>
<td align="left" valign="top">
<table class="simple oac_no_warn" summary="" cellspacing="0" cellpadding="0" width="98">
<tr>
<td align="center" valign="top"><a href="cnfg_net_srv.htm"><img width="24" height="24" src="../../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td align="center" valign="top"><a href="ldr_demo.htm"><img width="24" height="24" src="../../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td align="right" valign="top" style="font-size: 90%"><a href="../e10839.pdf">View PDF</a></td>
</tr>
</table>
<a name="BEGIN" id="BEGIN"></a></div>
<div class="IND"><!-- End Header --><a id="CFAEAGDD" name="CFAEAGDD"></a><a id="UNXAR006" name="UNXAR006"></a>
<h1 class="chapter"><span class="secnum">6</span> Using Oracle Precompilers and the Oracle Call Interface</h1>
<p>This chapter describes how to use Oracle precompilers and the Oracle Call Interface. It contains the following sections:</p>
<ul>
<li>
<p><a href="#i33304">Overview of Oracle Precompilers</a></p>
</li>
<li>
<p><a href="#CHDHBDBF">Bit-Length Support for Client Applications</a></p>
</li>
<li>
<p><a href="#i33246">Pro*C/C++ Precompiler</a></p>
</li>
<li>
<p><a href="#i36455">Pro*COBOL Precompiler</a></p>
</li>
<li>
<p><a href="#i28565">Pro*FORTRAN Precompiler</a></p>
</li>
<li>
<p><a href="#CFAJDECA">SQL*Module for ADA</a></p>
</li>
<li>
<p><a href="#i37921">OCI and OCCI</a></p>
</li>
<li>
<p><a href="#CACCDAFI">Oracle JDBC/OCI Programs with a 64-Bit Driver</a></p>
</li>
<li>
<p><a href="#i26133">Custom Make Files</a></p>
</li>
<li>
<p><a href="#i26152">Correcting Undefined Symbols</a></p>
</li>
<li>
<p><a href="#i26193">Multithreaded Applications</a></p>
</li>
<li>
<p><a href="#i26199">Using Signal Handlers</a></p>
</li>
<li>
<p><a href="#i26396">XA Functionality</a></p>
</li>
</ul>
<div class="infoboxnote">
<p class="notep1">Note:</p>
To use the demonstrations described in this chapter, install the Oracle Database Examples included on the Oracle Database 11<span class="italic">g</span> Examples media.</div>
<a id="i33304" name="i33304"></a><a id="UNXAR183" name="UNXAR183"></a>
<div class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1"><span class="secnum">6.1</span> Overview of Oracle Precompilers<a id="sthref195" name="sthref195"></a></h2>
<p>Oracle precompilers are application development tools that are used to combine SQL statements for an Oracle Database with programs written in a high-level language. Oracle precompilers are compatible with ANSI SQL and are used to develop and open customized applications that run with Oracle Database or any other ANSI SQL database management system.</p>
<p>This section contains the following topics:</p>
<ul>
<li>
<p><a href="#CIHCDHAF">Precompiler Configuration Files</a></p>
</li>
<li>
<p><a href="#BABFEJHA">Relinking Precompiler Executables</a></p>
</li>
<li>
<p><a href="#CIHBAGCJ">Precompiler README Files</a></p>
</li>
<li>
<p><a href="#CIHIIGEG">Issues Common to All Precompilers</a></p>
</li>
<li>
<p><a href="#CIHEFGAC">Static and Dynamic Linking</a></p>
</li>
<li>
<p><a href="#CACDIFAD">Client Shared and Static Libraries</a></p>
</li>
</ul>
<div class="infoboxnote">
<p class="notep1">Note:</p>
<code>ORACLE_HOME</code> in this section refers to <code>ORACLE_HOME</code> that is created while installing Oracle Database Client 11<span class="italic">g</span> by using the Administrator Install type.</div>
<a id="CIHCDHAF" name="CIHCDHAF"></a><a id="UNXAR184" name="UNXAR184"></a>
<div class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><span class="secnum">6.1.1</span> Precompiler Configuration Files<a id="sthref196" name="sthref196"></a></h3>
<p>Configuration files for the Oracle precompilers are located in the <code>$ORACLE_HOME/precomp/admin</code> directory.</p>
<p><a href="#g40004">Table 6-1</a> lists the names of the configuration files for each precompiler.</p>
<div class="tblformal">
<p class="titleintable"><a id="UNXAR185" name="UNXAR185"></a><a id="sthref197" name="sthref197"></a><a id="g40004" name="g40004"></a>Table 6-1 System Configuration Files for Oracle Precompilers</p>
<table class="Formal" title="System Configuration Files for Oracle Precompilers" summary="This table lists the system configuration files for Oracle Precompilers" dir="ltr" border="1" width="100%" frame="hsides" rules="groups" cellpadding="3" cellspacing="0">
<col width="*" />
<col width="28%" />
<thead>
<tr align="left" valign="top">
<th align="left" valign="bottom" id="r1c1-t4">Product</th>
<th align="left" valign="bottom" id="r1c2-t4">Configuration File</th>
</tr>
</thead>
<tbody>
<tr align="left" valign="top">
<td align="left" id="r2c1-t4" headers="r1c1-t4">
<p>Pro*C/C++</p>
</td>
<td align="left" headers="r2c1-t4 r1c2-t4">
<p><code>pcscfg.cfg</code><a id="sthref198" name="sthref198"></a><a id="sthref199" name="sthref199"></a><a id="sthref200" name="sthref200"></a></p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r3c1-t4" headers="r1c1-t4">
<p>Pro*COBOL</p>
</td>
<td align="left" headers="r3c1-t4 r1c2-t4">
<p><code>pcbcfg.cfg</code><a id="sthref201" name="sthref201"></a><a id="sthref202" name="sthref202"></a><a id="sthref203" name="sthref203"></a></p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r4c1-t4" headers="r1c1-t4">
<p>Pro*FORTRAN (AIX, HP-UX, and Solaris)</p>
</td>
<td align="left" headers="r4c1-t4 r1c2-t4">
<p><code>pccfor.cfg</code><a id="sthref204" name="sthref204"></a><a id="sthref205" name="sthref205"></a><a id="sthref206" name="sthref206"></a></p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r5c1-t4" headers="r1c1-t4">
<p>Object Type Translator</p>
</td>
<td align="left" headers="r5c1-t4 r1c2-t4">
<p><code>ottcfg.cfg</code><a id="sthref207" name="sthref207"></a><a id="sthref208" name="sthref208"></a><a id="sthref209" name="sthref209"></a></p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r6c1-t4" headers="r1c1-t4">
<p>SQL*Module for Ada (AIX)</p>
</td>
<td align="left" headers="r6c1-t4 r1c2-t4">
<p><code>pmscfg.cfg</code><a id="sthref210" name="sthref210"></a><a id="sthref211" name="sthref211"></a><a id="sthref212" name="sthref212"></a></p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="sect2" -->
<a id="BABFEJHA" name="BABFEJHA"></a><a id="UNXAR186" name="UNXAR186"></a>
<div class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><span class="secnum">6.1.2</span> Relinking Precompiler Executables<a id="sthref213" name="sthref213"></a><a id="sthref214" name="sthref214"></a></h3>
<p>Use the <code>$ORACLE_HOME/precomp/lib/ins_precomp.mk</code> <a id="sthref215" name="sthref215"></a><a id="sthref216" name="sthref216"></a><a id="sthref217" name="sthref217"></a>make file to relink all precompiler executables. To manually relink a particular precompiler executable, enter the following command:</p>
<pre xml:space="preserve" class="oac_no_warn">$ make -f ins_precomp.mk relink exename = <span class="italic">executable_name</span>
</pre>
<p>This command creates the new executable in the <code>$ORACLE_HOME/precomp/lib</code> directory, and then moves it to the <code>$ORACLE_HOME/bin</code> directory.</p>
<p>In the preceding example, replace <code><span class="codeinlineitalic">executable</span></code> with one of the product executables listed in <a href="#g39923">Table 6-2</a>.<a id="sthref218" name="sthref218"></a><a id="sthref219" name="sthref219"></a></p>
<p><a href="#g39923">Table 6-2</a> lists the executables for Oracle Precompilers.</p>
<div class="tblformal">
<p class="titleintable"><a id="UNXAR187" name="UNXAR187"></a><a id="sthref220" name="sthref220"></a><a id="g39923" name="g39923"></a>Table 6-2 Executables for Oracle Precompilers</p>
<table class="Formal" title="Executables for Oracle Precompilers" summary="This table lists products and the names of their corresponding executables" dir="ltr" border="1" width="100%" frame="hsides" rules="groups" cellpadding="3" cellspacing="0">
<col width="*" />
<col width="30%" />
<thead>
<tr align="left" valign="top">
<th align="left" valign="bottom" id="r1c1-t5">Product</th>
<th align="left" valign="bottom" id="r1c2-t5">Executable</th>
</tr>
</thead>
<tbody>
<tr align="left" valign="top">
<td align="left" id="r2c1-t5" headers="r1c1-t5">
<p>Pro*C/C++ 32 bit (HP-UX and IBM: Linux on System z)</p>
</td>
<td align="left" headers="r2c1-t5 r1c2-t5">
<p>proc</p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r3c1-t5" headers="r1c1-t5">
<p>Pro*COBOL (AIX, HP-UX, and Solaris)</p>
</td>
<td align="left" headers="r3c1-t5 r1c2-t5">
<p><code>procob</code> or <code>rtsora</code></p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r4c1-t5" headers="r1c1-t5">
<p>Pro*COBOL 32-bit (AIX, HP-UX, Solaris, and IBM: Linux on System z)</p>
</td>
<td align="left" headers="r4c1-t5 r1c2-t5">
<p><code>procob</code></p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r5c1-t5" headers="r1c1-t5">
<p>Pro*FORTRAN (HP-UX)</p>
</td>
<td align="left" headers="r5c1-t5 r1c2-t5">
<p><code>profor</code></p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r6c1-t5" headers="r1c1-t5">
<p>Pro*FORTRAN 32-bit (AIX, HP-UX, and Solaris)</p>
</td>
<td align="left" headers="r6c1-t5 r1c2-t5">
<p><code>profor</code></p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r7c1-t5" headers="r1c1-t5">
<p>SQL*Module for Ada (AIX)</p>
</td>
<td align="left" headers="r7c1-t5 r1c2-t5">
<p><code>modada</code></p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="sect2" -->
<a id="CIHBAGCJ" name="CIHBAGCJ"></a><a id="UNXAR188" name="UNXAR188"></a>
<div class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><span class="secnum">6.1.3</span> Precompiler README Files<a id="sthref221" name="sthref221"></a><a id="sthref222" name="sthref222"></a></h3>
<p>The README files describe changes made to the precompiler since the last release.</p>
<p><a href="#g39879">Table 6-3</a> lists the location of the precompiler README files.</p>
<div class="tblformal">
<p class="titleintable"><a id="UNXAR189" name="UNXAR189"></a><a id="sthref223" name="sthref223"></a><a id="g39879" name="g39879"></a>Table 6-3 Location of Precompiler README Files</p>
<table class="Formal" title="Location of Precompiler README Files" summary="This table lists the locations of the precompiler README files" dir="ltr" border="1" width="100%" frame="hsides" rules="groups" cellpadding="3" cellspacing="0">
<col width="22%" />
<col width="*" />
<thead>
<tr align="left" valign="top">
<th align="left" valign="bottom" id="r1c1-t6">Precompiler</th>
<th align="left" valign="bottom" id="r1c2-t6">README File</th>
</tr>
</thead>
<tbody>
<tr align="left" valign="top">
<td align="left" id="r2c1-t6" headers="r1c1-t6">
<p>Pro*C/C++</p>
</td>
<td align="left" headers="r2c1-t6 r1c2-t6">
<p><code>$ORACLE_HOME/precomp/doc/proc/readme.doc</code></p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r3c1-t6" headers="r1c1-t6">
<p>Pro*COBOL</p>
</td>
<td align="left" headers="r3c1-t6 r1c2-t6">
<p><code>$ORACLE_HOME/precomp/doc/procob2/readme.doc</code></p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r4c1-t6" headers="r1c1-t6">
<p>Pro*FORTRAN</p>
</td>
<td align="left" headers="r4c1-t6 r1c2-t6">
<p><code>$ORACLE_HOME/precomp/doc/pro1x/readme.txt</code></p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="sect2" -->
<a id="CIHIIGEG" name="CIHIIGEG"></a><a id="UNXAR190" name="UNXAR190"></a>
<div class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><span class="secnum">6.1.4</span> Issues Common to All Precompilers</h3>
<p>The following issues are common to all precompilers:</p>
<ul>
<li>
<p>Uppercase to Lowercase Conversion<a id="sthref224" name="sthref224"></a></p>
<p>In languages other than C, the compiler converts an uppercase function or subprogram name to lowercase. This can cause a <code>No such user exists</code> error message. If you receive this error message, then verify that the case of the function or subprogram name in the option file matches the case used in the IAPXTB table.</p>
</li>
<li>
<p>Vendor Debugger Programs<a id="sthref225" name="sthref225"></a><a id="sthref226" name="sthref226"></a></p>
<p>Precompilers and vendor-supplied debuggers can be incompatible. Oracle does not guarantee that a program run using a debugger performs the same way when it is run without the debugger.</p>
</li>
<li>
<p>Value of <code>IRECLEN</code> and <code>ORECLEN</code> parameters<a id="sthref227" name="sthref227"></a><a id="sthref228" name="sthref228"></a><a id="sthref229" name="sthref229"></a></p>
<p>The <code>IRECLEN</code> and <code>ORECLEN</code> parameters do not have maximum values.</p>
</li>
</ul>
</div>
<!-- class="sect2" -->
<a id="CIHEFGAC" name="CIHEFGAC"></a><a id="UNXAR191" name="UNXAR191"></a>
<div class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><span class="secnum">6.1.5</span> Static and Dynamic Linking<a id="sthref230" name="sthref230"></a><a id="sthref231" name="sthref231"></a></h3>
<p>You can statically or dynamically link Oracle libraries with precompiler and OCI or OCCI applications. With static linking, the libraries and objects of the whole application are linked into a single executable program. As a result, application executables can become very large.</p>
<p>With dynamic linking, the executing code is partly stored in the executable program and partly stored in libraries that are linked dynamically by the application at run time. Libraries that are linked at run time are called dynamic or shared libraries. The benefits of dynamic linking are:</p>
<ul>
<li>
<p>Reduced disk space requirements: Multiple applications or calls to the same application can use the same dynamic libraries.</p>
</li>
</ul>
<ul>
<li>
<p>Reduced main memory requirements: The same dynamic library image is loaded into main memory only once, and it can be shared by multiple application.</p>
</li>
</ul>
</div>
<!-- class="sect2" -->
<a id="CACDIFAD" name="CACDIFAD"></a><a id="UNXAR192" name="UNXAR192"></a>
<div class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><span class="secnum">6.1.6</span> Client Shared and Static Libraries<a id="sthref232" name="sthref232"></a><a id="sthref233" name="sthref233"></a><a id="sthref234" name="sthref234"></a></h3>
<p>The client shared and static libraries are located in <code>$ORACLE_HOME/lib.</code> If you use the Oracle-provided <code>demo_</code><code><span class="codeinlineitalic">product</span></code><code>.mk</code> file to link an application, then the client shared library is linked by default.</p>
<p>If the shared library path environment variable setting does not include the directory that contains the client shared library, then you may see an error message similar to one of the following lines when starting an executable:</p>
<pre xml:space="preserve" class="oac_no_warn">Cannot load library libclntsh.a
cannot open shared library: .../libclntsh.sl.10.1
libclntsh.so.10.1: can't open file: errno=2 
can't open library: .../libclntsh.dylib.10.1  
Cannot map libclntsh.so
</pre>
<p>To avoid this error, set the shared library path environment variable to specify the appropriate directory. The following table shows sample settings for this environment variable name. If the platform supports both 32-bit and 64-bit applications, then ensure that you specify the correct directory, depending on the application that you want to run.</p>
<div class="inftblinformal">
<table class="Informal" title="Shared Library Path Environment Variable Settings" summary="This table lists sample settings for the shared library path environment variable" dir="ltr" border="1" width="100%" frame="hsides" rules="groups" cellpadding="3" cellspacing="0">
<col width="*" />
<col width="28%" />
<col width="36%" />
<thead>
<tr align="left" valign="top">
<th align="left" valign="bottom" id="r1c1-t7">Platform</th>
<th align="left" valign="bottom" id="r1c2-t7">Environment Variable</th>
<th align="left" valign="bottom" id="r1c3-t7">Sample Setting</th>
</tr>
</thead>
<tbody>
<tr align="left" valign="top">
<td align="left" id="r2c1-t7" headers="r1c1-t7">AIX (32-bit applications)</td>
<td align="left" headers="r2c1-t7 r1c2-t7"><code>LIBPATH</code></td>
<td align="left" headers="r2c1-t7 r1c3-t7"><code>$ORACLE_HOME/lib</code></td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r3c1-t7" headers="r1c1-t7">AIX (64-bit applications)</td>
<td align="left" headers="r3c1-t7 r1c2-t7"><code>LIBPATH</code></td>
<td align="left" headers="r3c1-t7 r1c3-t7"><code>$ORACLE_HOME/lib</code></td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r4c1-t7" headers="r1c1-t7">HP-UX (32-bit applications)</td>
<td align="left" headers="r4c1-t7 r1c2-t7"><code>SHLIB_PATH</code></td>
<td align="left" headers="r4c1-t7 r1c3-t7"><code>$ORACLE_HOME/lib</code></td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r5c1-t7" headers="r1c1-t7">HP-UX (64-bit applications) and Linux</td>
<td align="left" headers="r5c1-t7 r1c2-t7"><code>LD_LIBRARY_PATH</code></td>
<td align="left" headers="r5c1-t7 r1c3-t7"><code>$ORACLE_HOME/lib</code></td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r6c1-t7" headers="r1c1-t7">Solaris (32-bit applications)</td>
<td align="left" headers="r6c1-t7 r1c2-t7"><code>LD_LIBRARY_PATH</code></td>
<td align="left" headers="r6c1-t7 r1c3-t7"><code>$ORACLE_HOME/lib</code></td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r7c1-t7" headers="r1c1-t7">Solaris (64-bit applications)</td>
<td align="left" headers="r7c1-t7 r1c2-t7"><code>LD_LIBRARY_PATH</code></td>
<td align="left" headers="r7c1-t7 r1c3-t7"><code>$ORACLE_HOME/lib</code></td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r8c1-t7" headers="r1c1-t7">IBM: Linux on System z (32-bit applications)</td>
<td align="left" headers="r8c1-t7 r1c2-t7"><code>LD_LIBRARY_PATH</code></td>
<td align="left" headers="r8c1-t7 r1c3-t7"><code>$ORACLE_HOME/lib</code></td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r9c1-t7" headers="r1c1-t7">IBM: Linux on System z (64-bit applications)</td>
<td align="left" headers="r9c1-t7 r1c2-t7"><code>LD_LIBRARY_PATH</code></td>
<td align="left" headers="r9c1-t7 r1c3-t7"><code>$ORACLE_HOME/lib</code></td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" -->
<p>The client shared library is created automatically during installation. If you must re-create it, then:</p>
<ol>
<li>
<p>Quit all client applications that use the client shared library, including all Oracle client applications such as SQL*Plus and Oracle Recovery Manager.</p>
</li>
<li>
<p>Log in as the <code>oracle</code> user, and run the following command:</p>
<pre xml:space="preserve" class="oac_no_warn">$ $ORACLE_HOME/bin/genclntsh
</pre></li>
</ol>
<p class="subhead2"><a id="UNXAR193" name="UNXAR193"></a>Nonthreaded Client Shared Library</p>
<div class="infoboxnote">
<p class="notep1">Note:</p>
The information in this section applies to HP-UX systems.</div>
<p>On HP-UX, you can use a non-threaded client shared library. However, you cannot use this library with any OCI application that uses or has a dependency on threads.</p>
<p>To use this library for applications that do not use threads, run the following command to build the OCI application for 32 and 64-bit:</p>
<pre xml:space="preserve" class="oac_no_warn">$ make -f demo_rdbms.mk build_nopthread EXE=oci02 OBJS=oci02.o
</pre></div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="CHDHBDBF" name="CHDHBDBF"></a><a id="UNXAR194" name="UNXAR194"></a>
<div class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1"><span class="secnum">6.2</span> Bit-Length Support for Client Applications<a id="sthref235" name="sthref235"></a></h2>
<p>The following table identifies the bit lengths (31-bit, 32-bit, or 64-bit) supported for client applications:</p>
<div class="infoboxnote">
<p class="notep1">Note:</p>
Starting with Oracle Database 11<span class="italic">g</span> Release 2 (11.2), 32-bit precompiler, 32-bit client executables, and libraries are not available in the 64-bit Oracle database installation. These are installed as part of the Oracle Database Client Installation.</div>
<div class="inftblinformal">
<table class="Informal" title="Support for 32-Bit and 64-Bit Client Applications" summary="This table identifies the bit lengths supported for client applications" dir="ltr" border="1" width="100%" frame="hsides" rules="groups" cellpadding="3" cellspacing="0">
<col width="33%" />
<col width="*" />
<thead>
<tr align="left" valign="top">
<th align="left" valign="bottom" id="r1c1-t10">Client Application Type</th>
<th align="left" valign="bottom" id="r1c2-t10">Supported Platforms</th>
</tr>
</thead>
<tbody>
<tr align="left" valign="top">
<td align="left" id="r2c1-t10" headers="r1c1-t10">32-bit only</td>
<td align="left" headers="r2c1-t10 r1c2-t10">Linux x86</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r3c1-t10" headers="r1c1-t10">32-bit and 64-bit</td>
<td align="left" headers="r3c1-t10 r1c2-t10">AIX, HP-UX PA-RISC, Linux x86-64, SPARC, HP-UX Itanium, Solaris x86-64, and IBM: Linux on System z</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" -->
<p>The following table lists the 32-bit and 64-bit client shared libraries:</p>
<div class="infoboxnote">
<p class="notep1">Note:</p>
Starting with Oracle Database 11<span class="italic">g</span> Release 2 (11.2), 32-bit and 64-bit Oracle Database Clients are installed in separate Oracle homes.</div>
<div class="inftblinformalmax">
<table class="InformalMax" title="32-Bit and 64-Bit Client Shared Libraries" summary="This table lists the 32-bit and 64-bit client shared libraries" dir="ltr" border="1" width="100%" frame="hsides" rules="groups" cellpadding="3" cellspacing="0">
<col width="25%" />
<col width="*" />
<col width="33%" />
<thead>
<tr align="left" valign="top">
<th align="left" valign="bottom" id="r1c1-t12">Platform</th>
<th align="left" valign="bottom" id="r1c2-t12">32-Bit (or 31-Bit) Client Shared Library</th>
<th align="left" valign="bottom" id="r1c3-t12">64-Bit Client Shared Library</th>
</tr>
</thead>
<tbody>
<tr align="left" valign="top">
<td align="left" id="r2c1-t12" headers="r1c1-t12">AIX</td>
<td align="left" headers="r2c1-t12 r1c2-t12">
<pre xml:space="preserve" class="oac_no_warn">$ORACLE_HOME/lib/libclntsh.a
$ORACLE_HOME/lib/libclntsh.so
</pre></td>
<td align="left" headers="r2c1-t12 r1c3-t12">
<pre xml:space="preserve" class="oac_no_warn">$ORACLE_HOME/lib/libclntsh.a
$ORACLE_HOME/lib/libclntsh.so
</pre></td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r3c1-t12" headers="r1c1-t12">HP-UX PA-RISC
<p>HP-UX Itanium</p>
</td>
<td align="left" headers="r3c1-t12 r1c2-t12">
<pre xml:space="preserve" class="oac_no_warn">$ORACLE_HOME/lib/libclntsh.sl
</pre></td>
<td align="left" headers="r3c1-t12 r1c3-t12">
<pre xml:space="preserve" class="oac_no_warn">$ORACLE_HOME/lib/libclntsh.sl
</pre></td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r4c1-t12" headers="r1c1-t12">Linux x86-64, Solaris, Solaris x86-64, and IBM: Linux on System z</td>
<td align="left" headers="r4c1-t12 r1c2-t12">
<pre xml:space="preserve" class="oac_no_warn">$ORACLE_HOME/lib/libclntsh.so
</pre></td>
<td align="left" headers="r4c1-t12 r1c3-t12">
<pre xml:space="preserve" class="oac_no_warn">$ORACLE_HOME/lib/libclntsh.so
</pre></td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformalmax" -->
<p>To implement a mixed word-size installation:</p>
<ol>
<li>
<p>Run the following command to generate the 32-bit and 64-bit client shared libraries:</p>
<pre xml:space="preserve" class="oac_no_warn">$ $ORACLE_HOME/bin/genclntsh
</pre></li>
<li>
<p>Include the paths of the required 32-bit and 64-bit client shared libraries in one of the following environment variables, depending on the platform:</p>
<div class="inftblinformal">
<table class="Informal" title="Path Environment Variables" summary="This table lists the path environment variables" dir="ltr" border="1" width="100%" frame="hsides" rules="groups" cellpadding="3" cellspacing="0">
<col width="44%" />
<col width="*" />
<thead>
<tr align="left" valign="top">
<th align="left" valign="bottom" id="r1c1-t13">Platform</th>
<th align="left" valign="bottom" id="r1c2-t13">Environment Variable</th>
</tr>
</thead>
<tbody>
<tr align="left" valign="top">
<td align="left" id="r2c1-t13" headers="r1c1-t13">AIX</td>
<td align="left" headers="r2c1-t13 r1c2-t13"><code>LIBPATH</code></td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r3c1-t13" headers="r1c1-t13">HP-UX (32-bit client applications)</td>
<td align="left" headers="r3c1-t13 r1c2-t13"><code>SHLIB_PATH</code></td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r4c1-t13" headers="r1c1-t13">HP-UX, Linux x86, Linux x86-64, Solaris, and IBM: Linux on System z</td>
<td align="left" headers="r4c1-t13 r1c2-t13"><code>LD_LIBRARY_PATH</code></td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" --></li>
</ol>
<p class="subhead2"><a id="UNXAR195" name="UNXAR195"></a>Building 32-Bit Pro*C and OCI Customer Applications</p>
<p>If the operating system supports both Pro*C and Oracle Call Interface (OCI) customer applications, then you can find more information about building Pro*C and OCI applications in the following files:</p>
<div class="inftblinformal">
<table class="Informal" title="Make Files for Pro*C and OCI Applications" summary="This table lists the make files for Pro*C and OCI applications" dir="ltr" border="1" width="100%" frame="hsides" rules="groups" cellpadding="3" cellspacing="0">
<col width="31%" />
<col width="*" />
<thead>
<tr align="left" valign="top">
<th align="left" valign="bottom" id="r1c1-t14">For Information About. . .</th>
<th align="left" valign="bottom" id="r1c2-t14">Refer to the Following Make Files. . .</th>
</tr>
</thead>
<tbody>
<tr align="left" valign="top">
<td align="left" id="r2c1-t14" headers="r1c1-t14">Building Pro*C applications</td>
<td align="left" headers="r2c1-t14 r1c2-t14"><code>$ORACLE_HOME/precomp/demo/proc/demo_proc.mk</code></td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r3c1-t14" headers="r1c1-t14">Building OCI applications</td>
<td align="left" headers="r3c1-t14 r1c2-t14"><code>$ORACLE_HOME/rdbms/demo/demo_rdbms.mk</code></td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" --></div>
<!-- class="sect1" -->
<a id="i33246" name="i33246"></a><a id="UNXAR196" name="UNXAR196"></a>
<div class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1"><span class="secnum">6.3</span> Pro*C/C++ Precompiler<a id="sthref236" name="sthref236"></a><a id="sthref237" name="sthref237"></a></h2>
<p>Before you use the Pro*C/C++ precompiler, verify that the correct version of the operating system compiler is properly installed.</p>
<div class="infoboxnotealso">
<p class="notep1"><span class="bold">See Also</span>:</p>
<ul>
<li>
<p><a class="olink GINST" href="http://www.oracle.com/pls/db112/lookup?id=GINST">Oracle Database Installation Guide</a> for information about supported compiler versions</p>
</li>
<li>
<p><a class="olink LNPCC" href="http://www.oracle.com/pls/db112/lookup?id=LNPCC"><span class="italic">Pro*C/C++ Programmer's Guide</span></a> for information about the Pro*C/C++ precompiler and interface features</p>
</li>
</ul>
</div>
<p>This section contains the following topics:</p>
<ul>
<li>
<p><a href="#BABCAJHH">Pro*C/C++ Demonstration Programs</a></p>
</li>
<li>
<p><a href="#BABFHEGJ">Pro*C/C++ User Programs</a></p>
</li>
</ul>
<a id="BABCAJHH" name="BABCAJHH"></a><a id="UNXAR197" name="UNXAR197"></a>
<div class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><span class="secnum">6.3.1</span> Pro*C/C++ Demonstration Programs<a id="sthref238" name="sthref238"></a><a id="sthref239" name="sthref239"></a></h3>
<p>Demonstration programs are provided to show the features of the Pro*C/C++ precompiler. There are three types of demonstration programs: C, C++, and Object programs. All demonstration programs are located in the <code>$ORACLE_HOME/precomp/demo/proc</code> directory. By default, all programs are dynamically linked with the client shared library.</p>
<p>To run the demonstration programs, the programs require the demonstration tables created by the <code>$ORACLE_HOME/sqlplus/demo/demobld.sql</code> script to exist in the SCOTT schema with the password TIGER.</p>
<div class="infoboxnote">
<p class="notep1">Note:</p>
You must unlock the SCOTT account and set the password before creating the demonstrations.</div>
<p>Use the <code>demo_proc.mk</code> <a id="sthref240" name="sthref240"></a>make file, which is located in the <code>$ORACLE_HOME/precomp/demo/proc/</code> directory, to create the demonstration programs. For example, to precompile, compile, and link the <code>sample1</code> demonstration program, run the following command:</p>
<div class="infoboxnote">
<p class="notep1">Note:</p>
On AIX systems, to ensure that the demonstration programs compile correctly, include the <code>-r</code> option of the <code>make</code> command in the following examples. For example:
<pre xml:space="preserve" class="oac_no_warn">$ make -r -f demo_proc.mk sample1
</pre></div>
<pre xml:space="preserve" class="oac_no_warn">$ make -f demo_proc.mk sample1
</pre>
<p>To create all the C demonstration programs for Pro*C/C++, run the following command:</p>
<pre xml:space="preserve" class="oac_no_warn">$ make -f demo_proc.mk samples
</pre>
<p>To create all the C++ demonstration programs for Pro*C/C++, run the following command:</p>
<pre xml:space="preserve" class="oac_no_warn">$ make -f demo_proc.mk cppsamples
</pre>
<p>To create all the Object demonstration programs for Pro*C/C++, run the following command:</p>
<pre xml:space="preserve" class="oac_no_warn">$ make -f demo_proc.mk object_samples
</pre>
<p>Some demonstration programs require you to run a SQL script, located in the <code>$ORACLE_HOME/precomp/demo/sql</code> directory. If you do not run the script, then a message prompting you to run it is displayed.</p>
<p>To build a demonstration program and run the corresponding SQL script, include the <code>make</code> macro argument <code>RUNSQL=run</code> at the command line. For example, to create the <code>sample9</code> demonstration program and run the required <code>$ORACLE_HOME/precomp/demo/sql/sample9.sql</code> script, run the following command:</p>
<pre xml:space="preserve" class="oac_no_warn">$ make -f demo_proc.mk sample9 RUNSQL=run
</pre>
<p>To create all the Object demonstration programs and run all the required SQL scripts, run the following command:</p>
<pre xml:space="preserve" class="oac_no_warn">$ make -f demo_proc.mk object_samples RUNSQL=run
</pre></div>
<!-- class="sect2" -->
<a id="BABFHEGJ" name="BABFHEGJ"></a><a id="UNXAR198" name="UNXAR198"></a>
<div class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><span class="secnum">6.3.2</span> Pro*C/C++ User Programs<a id="sthref241" name="sthref241"></a><a id="sthref242" name="sthref242"></a><a id="sthref243" name="sthref243"></a></h3>
<p>You can use the <code>$ORACLE_HOME/precomp/demo/proc/demo_proc.mk</code> make file to create user programs. This make file builds either 32-bit or 64-bit user programs. You can also use the <code>demo_proc32.mk</code> <a id="sthref244" name="sthref244"></a><a id="sthref245" name="sthref245"></a>make file to build 32-bit user programs. The following table shows the make files that you can use to build 32-bit and 64-bit user programs with Pro*C/C++:</p>
<div class="inftblhruleinformal">
<table class="HRuleInformal" title="Make Files for Use with Pro*C/C++" summary="This table lists the make files that you can use with Pro*C/C++ to build 31-bit, 32-bit, or 64-bit user programs" dir="ltr" border="1" width="100%" frame="hsides" rules="rows" cellpadding="3" cellspacing="0">
<col width="35%" />
<col width="28%" />
<col width="*" />
<thead>
<tr align="left" valign="top">
<th align="left" valign="bottom" id="r1c1-t18">Platform</th>
<th align="left" valign="bottom" id="r1c2-t18">64-bit Make File</th>
<th align="left" valign="bottom" id="r1c3-t18">32-Bit Make File</th>
</tr>
</thead>
<tbody>
<tr align="left" valign="top">
<td align="left" id="r2c1-t18" headers="r1c1-t18">AIX, HP-UX, Linux x86-64, Solaris x86-64 and Solaris</td>
<td align="left" headers="r2c1-t18 r1c2-t18"><code>demo_proc.mk</code></td>
<td align="left" headers="r2c1-t18 r1c3-t18"><code>demo_proc32.mk</code></td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r3c1-t18" headers="r1c1-t18">Linux x86</td>
<td align="left" headers="r3c1-t18 r1c2-t18">NA</td>
<td align="left" headers="r3c1-t18 r1c3-t18"><code>demo_proc.mk</code></td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblhruleinformal" -->
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
The make file for more information about creating user programs</div>
<div class="infoboxnote">
<p class="notep1">Note:</p>
On AIX systems, to ensure that the programs compile correctly, specify the <code>-r</code> option for the <code>make</code> command used in the following examples.</div>
<p>To create a program by using the <code>demo_proc.mk</code> make file, run a command similar to the following:</p>
<pre xml:space="preserve" class="oac_no_warn">$ make -f demo_proc.mk <span class="italic">target</span> OBJS="<span class="italic">objfile1</span> <span class="italic">objfile2</span> ..." EXE=<span class="italic">exename</span>
</pre>
<p>In this example:</p>
<ul>
<li>
<p><code><span class="codeinlineitalic">target</span></code> is the make file target that you want to use</p>
</li>
<li>
<p><code><span class="codeinlineitalic">objfilen</span></code> is the object file to link the program</p>
</li>
<li>
<p><code><span class="codeinlineitalic">exename</span></code> is the executable program</p>
</li>
</ul>
<p>For example, to create the program <code>myprog</code> from the Pro*C/C++ source file <code>myprog.pc</code>, run one of the following commands, depending on the source and the type of executable that you want to create:</p>
<ul>
<li>
<p>For C source dynamically linked with the client shared library, run the following command:</p>
<pre xml:space="preserve" class="oac_no_warn">$ make -f demo_proc.mk build OBJS=myprog.o EXE=myprog
</pre></li>
<li>
<p>For C source statically linked with the client shared library, run the following command:</p>
<pre xml:space="preserve" class="oac_no_warn">$ make -f demo_proc.mk build_static OBJS=myprog.o EXE=myprog
</pre></li>
<li>
<p>For C++ source dynamically linked with the client shared library, run the following command:</p>
<pre xml:space="preserve" class="oac_no_warn">$ make -f demo_proc.mk cppbuild OBJS=myprog.o EXE=myprog
</pre></li>
<li>
<p>For C++ source statically linked with the client shared library, run the following command:</p>
<pre xml:space="preserve" class="oac_no_warn">$ make -f demo_proc.mk cppbuild_static OBJS=myprog.o EXE=myprog
</pre></li>
</ul>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="i36455" name="i36455"></a><a id="UNXAR199" name="UNXAR199"></a>
<div class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1"><span class="secnum">6.4</span> Pro*COBOL Precompiler<a id="sthref246" name="sthref246"></a></h2>
<p><a href="#BABBJHHC">Table 6-4</a> shows the naming conventions for the Pro*COBOL precompiler.</p>
<div class="tblformal">
<p class="titleintable"><a id="UNXAR200" name="UNXAR200"></a><a id="sthref247" name="sthref247"></a><a id="BABBJHHC" name="BABBJHHC"></a>Table 6-4 Pro*COBOL Naming Conventions <a id="sthref248" name="sthref248"></a></p>
<table class="Formal" title="Pro*COBOL Naming Conventions " summary="This table shows Pro*COBOL naming conventions" dir="ltr" border="1" width="100%" frame="hsides" rules="groups" cellpadding="3" cellspacing="0">
<col width="44%" />
<col width="*" />
<thead>
<tr align="left" valign="top">
<th align="left" valign="bottom" id="r1c1-t21">Item</th>
<th align="left" valign="bottom" id="r1c2-t21">Naming Convention</th>
</tr>
</thead>
<tbody>
<tr align="left" valign="top">
<td align="left" id="r2c1-t21" headers="r1c1-t21">
<p>Executable</p>
</td>
<td align="left" headers="r2c1-t21 r1c2-t21">
<p><code>procob</code></p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r3c1-t21" headers="r1c1-t21">
<p>Demonstration directory</p>
</td>
<td align="left" headers="r3c1-t21 r1c2-t21">
<p><code>procob2</code></p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r4c1-t21" headers="r1c1-t21">
<p>Make file</p>
</td>
<td align="left" headers="r4c1-t21 r1c2-t21">
<p><code>demo_procob.mk</code> or <code>demo_procob_32.mk</code></p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" -->
<p>Pro*COBOL supports statically linked, dynamically linked, or dynamically loadable programs. Dynamically linked programs use the client shared library. Dynamically loadable programs use the <code>rtsora</code> executable located in the <code>$ORACLE_HOME/bin</code> directory.</p>
<p>This section contains the following topics:</p>
<ul>
<li>
<p><a href="#BABDBGFF">Pro*COBOL Environment Variables</a></p>
</li>
<li>
<p><a href="#BABFCGAG">Pro*COBOL Oracle Runtime System</a></p>
</li>
<li>
<p><a href="#BABFIABE">Pro*COBOL Demonstration Programs</a></p>
</li>
<li>
<p><a href="#BABFFFGC">Pro*COBOL User Programs</a></p>
</li>
<li>
<p><a href="#BABJAFHH">FORMAT Precompiler Option</a></p>
</li>
</ul>
<a id="BABDBGFF" name="BABDBGFF"></a><a id="UNXAR201" name="UNXAR201"></a>
<div class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><span class="secnum">6.4.1</span> Pro*COBOL Environment Variables<a id="sthref249" name="sthref249"></a><a id="sthref250" name="sthref250"></a></h3>
<p>This section describes the environment variables required by Pro*COBOL:</p>
<ul>
<li>
<p><a href="#BABCBAIB">Micro Focus Server Express COBOL Compiler</a></p>
</li>
<li>
<p><a href="#BABDIIDC">Acucorp ACUCOBOL-GT COBOL Compiler</a></p>
</li>
</ul>
<a id="BABCBAIB" name="BABCBAIB"></a><a id="UNXAR202" name="UNXAR202"></a>
<div class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3"><span class="secnum">6.4.1.1</span> Micro Focus Server Express COBOL Compiler<a id="sthref251" name="sthref251"></a><a id="sthref252" name="sthref252"></a><a id="sthref253" name="sthref253"></a></h4>
<p>To use the Micro Focus Server Express COBOL compiler, you must set the <code>COBDIR</code> and <code>PATH</code> environment variables and the shared library path environment variable.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
The <a href="#CACDIFAD">"Client Shared and Static Libraries"</a> section for information about the shared library path environment variable</div>
<p class="subhead2"><a id="UNXAR203" name="UNXAR203"></a>COBDIR<a id="sthref254" name="sthref254"></a><a id="sthref255" name="sthref255"></a></p>
<p>Set the <code>COBDIR</code> environment variable to the directory where the compiler is installed. For example, if the compiler is installed in the <code>/opt/lib/cobol</code> directory, then run the following command:</p>
<ul>
<li>
<p>Bourne, Bash, or Korn shell:</p>
<pre xml:space="preserve" class="oac_no_warn">$ COBDIR=/opt/lib/cobol
$ export COBDIR
</pre></li>
<li>
<p>C shell:</p>
<pre xml:space="preserve" class="oac_no_warn">% setenv COBDIR /opt/lib/cobol
</pre></li>
</ul>
<p class="subhead2"><a id="UNXAR204" name="UNXAR204"></a>PATH<a id="sthref256" name="sthref256"></a><a id="sthref257" name="sthref257"></a></p>
<p>Set the <code>PATH</code> environment variable to include the <code>$COBDIR/bin</code> directory:</p>
<ul>
<li>
<p>Bourne, Bash, or Korn shell:</p>
<pre xml:space="preserve" class="oac_no_warn">$ PATH=$COBDIR/bin:$PATH
$ export PATH
</pre></li>
<li>
<p>C shell:</p>
<pre xml:space="preserve" class="oac_no_warn">% setenv PATH ${COBDIR}/bin:${PATH}
</pre></li>
</ul>
<p class="subhead2"><a id="UNXAR205" name="UNXAR205"></a>Shared Library Path<a id="sthref258" name="sthref258"></a><a id="sthref259" name="sthref259"></a><a id="sthref260" name="sthref260"></a><a id="sthref261" name="sthref261"></a><a id="sthref262" name="sthref262"></a><a id="sthref263" name="sthref263"></a></p>
<p>Set the <code>LIBPATH</code>, <code>LD_LIBRARY_PATH</code>, or <code>SHLIB_PATH</code> environment variable to the directory where the compiler library is installed. For example, if the platform uses the <code>LD_LIBRARY_PATH</code> environment variable and the compiler library is installed in the <code>$COBDIR/coblib</code> directory, then run the following command:</p>
<ul>
<li>
<p>Bourne, Bash, or Korn shell:</p>
<pre xml:space="preserve" class="oac_no_warn">$ LD_LIBRARY_PATH=${LD_LIBRARY_PATH}:$COBDIR/coblib
$ export LD_LIBRARY_PATH
</pre></li>
<li>
<p>C shell:</p>
<pre xml:space="preserve" class="oac_no_warn">% setenv LD_LIBRARY_PATH ${LD_LIBRARY_PATH}:$COBDIR/coblib
</pre></li>
</ul>
</div>
<!-- class="sect3" -->
<a id="BABDIIDC" name="BABDIIDC"></a><a id="UNXAR206" name="UNXAR206"></a>
<div class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3"><span class="secnum">6.4.1.2</span> Acucorp ACUCOBOL-GT COBOL Compiler</h4>
<p>To use the Acucorp ACUCOBOL-GT COBOL compiler, you must set the <code>A_TERMCAP</code>, <code>A_TERM</code>, <code>PATH</code>, and <code>LD_LIBRARY_PATH</code> environment variables. If the <code>LD_LIBRARY_PATH</code> environment variable setting does not include the correct directory, then an error message similar to the following is displayed when you compile or run a program:</p>
<pre xml:space="preserve" class="oac_no_warn">runcbl: error while loading shared libraries: libclntsh.so: 
cannot open shared object file: No such file or directory
</pre>
<p class="subhead2"><a id="UNXAR207" name="UNXAR207"></a>A_TERMCAP and A_TERM<a id="sthref264" name="sthref264"></a><a id="sthref265" name="sthref265"></a><a id="sthref266" name="sthref266"></a><a id="sthref267" name="sthref267"></a></p>
<p>Set the <code>A_TERMCAP</code> environment variable to specify the location of the <code>a_termcap</code> file and set the <code>A_TERM</code> environment variable to specify a supported terminal from that file. For example:</p>
<ul>
<li>
<p>Bourne, Bash, or Korn shell:</p>
<pre xml:space="preserve" class="oac_no_warn">$ A_TERMCAP=/opt/COBOL/etc/a_termcap
$ A_TERM=vt100
$ export A_TERMCAP A_TERM
</pre></li>
<li>
<p>C shell:</p>
<pre xml:space="preserve" class="oac_no_warn">% setenv A_TERMCAP /opt/COBOL/etc/a_termcap
% setenv A_TERM vt100
</pre></li>
</ul>
<p class="subhead2"><a id="UNXAR208" name="UNXAR208"></a>PATH<a id="sthref268" name="sthref268"></a><a id="sthref269" name="sthref269"></a></p>
<p>Set the <code>PATH</code> environment variable to include the <code>/opt/COBOL/bin</code> directory:</p>
<ul>
<li>
<p>Bourne, Bash, or Korn shell:</p>
<pre xml:space="preserve" class="oac_no_warn">$ PATH=/opt/COBOL/bin:$PATH
$ export PATH
</pre></li>
<li>
<p>C shell:</p>
<pre xml:space="preserve" class="oac_no_warn">% setenv PATH opt/COBOL/bin:${PATH}
</pre></li>
</ul>
<p class="subhead2"><a id="UNXAR209" name="UNXAR209"></a>LD_LIBRARY_PATH<a id="sthref270" name="sthref270"></a><a id="sthref271" name="sthref271"></a></p>
<div class="infoboxnote">
<p class="notep1">Note:</p>
On AIX, the <code>LIBPATH</code> variable is the <code>LD_LIBRARY_PATH</code> variable equivalent. You must use the <code>LIBPATH</code> variable on AIX instead of the <code>LD_LIBRARY_PATH</code> variable in the following commands.</div>
<p>Set the <code>LD_LIBRARY_PATH</code> environment variable to the directory where the compiler library is installed. For example, if the compiler library is installed in the <code>/opt/COBOL/lib</code> directory, then run the following command:</p>
<ul>
<li>
<p>Bourne, Bash, or Korn shell:</p>
<pre xml:space="preserve" class="oac_no_warn">$ LD_LIBRARY_PATH=${LD_LIBRARY_PATH}:/opt/COBOL/lib
$ export LD_LIBRARY_PATH
</pre></li>
<li>
<p>C shell:</p>
<pre xml:space="preserve" class="oac_no_warn">% setenv LD_LIBRARY_PATH ${LD_LIBRARY_PATH}:/opt/COBOL/lib
</pre></li>
</ul>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<a id="BABFCGAG" name="BABFCGAG"></a><a id="UNXAR210" name="UNXAR210"></a>
<div class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><span class="secnum">6.4.2</span> Pro*COBOL Oracle Runtime System<a id="sthref272" name="sthref272"></a></h3>
<p>Oracle provides its own complete run-time system, called <code>rtsora</code>, to run dynamically loadable Pro*COBOL programs. Use the <code>rtsora</code> run-time system instead of the <code>cobrun</code> run-time system to run dynamically loadable Pro*COBOL programs. If you attempt to run a Pro*COBOL program with <code>cobrun</code>, then an error message similar to the following is displayed:</p>
<pre xml:space="preserve" class="oac_no_warn">$ cobrun sample1.gnt
Load error : file 'SQLADR'
error code: 173, pc=0, call=1, seg=0
173     Called program file not found in drive/directory
</pre></div>
<!-- class="sect2" -->
<a id="BABFIABE" name="BABFIABE"></a><a id="UNXAR211" name="UNXAR211"></a>
<div class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><span class="secnum">6.4.3</span> Pro*COBOL Demonstration Programs<a id="sthref273" name="sthref273"></a><a id="sthref274" name="sthref274"></a></h3>
<p>Demonstration programs are provided to show the features of the Pro*COBOL precompiler. The demonstration programs are located in the <code>$ORACLE_HOME/precomp/demo/procob2</code> directory. By default, all programs are dynamically linked with the client shared library.</p>
<p>To run the demonstration programs, the programs require the demonstration tables created by the <code>$ORACLE_HOME/sqlplus/demo/demobld.sql</code> script to exist in the SCOTT schema with the password TIGER.</p>
<div class="infoboxnote">
<p class="notep1">Note:</p>
You must unlock the SCOTT account and set the password before creating the demonstrations.</div>
<p>Use the following make file to create the demonstration programs:</p>
<pre xml:space="preserve" class="oac_no_warn">$ORACLE_HOME/precomp/demo/procob2/demo_procob.mk
</pre>
<p>To precompile, compile, and link the <code>sample1</code> demonstration program for Pro*COBOL, run the following command:</p>
<pre xml:space="preserve" class="oac_no_warn">$ make -f demo_procob.mk sample1
</pre>
<p>To create the Pro*COBOL demonstration programs, run the following command:</p>
<pre xml:space="preserve" class="oac_no_warn">$ make -f demo_procob.mk samples
</pre>
<p>To create and run a dynamically loadable <code>sample1.gnt</code> program to be used with the <code>rtsora</code> run-time system, run the following command:</p>
<pre xml:space="preserve" class="oac_no_warn">$ make -f demo_procob.mk sample1.gnt
$ rtsora sample1.gnt
</pre>
<p>Some demonstration programs require you to run a SQL script, which is located in the <code>$ORACLE_HOME/precomp/demo/sql</code> directory. If you do not run the script, then a message requesting you to run it is displayed.</p>
<p>To build a demonstration program and run the corresponding SQL script, include the <code>make</code> macro argument <code>RUNSQL=run</code> in the command. For example, to create the <code>sample9</code> demonstration program and run the required <code>$ORACLE_HOME/precomp/demo/sql/sample9.sql</code> script, run the following command:</p>
<pre xml:space="preserve" class="oac_no_warn">$ make -f demo_procob.mk sample9 RUNSQL=run
</pre>
<p>To create the Pro*COBOL demonstration programs and run all required SQL scripts, run the following command:</p>
<pre xml:space="preserve" class="oac_no_warn">$ make -f demo_procob.mk samples RUNSQL=run
</pre></div>
<!-- class="sect2" -->
<a id="BABFFFGC" name="BABFFFGC"></a><a id="UNXAR212" name="UNXAR212"></a>
<div class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><span class="secnum">6.4.4</span> Pro*COBOL User Programs<a id="sthref275" name="sthref275"></a><a id="sthref276" name="sthref276"></a><a id="sthref277" name="sthref277"></a><a id="sthref278" name="sthref278"></a></h3>
<p>You can use the<a id="sthref279" name="sthref279"></a><a id="sthref280" name="sthref280"></a><a id="sthref281" name="sthref281"></a> <code>$ORACLE_HOME/precomp/demo/procob2/demo_procob.mk</code> make file to create user programs. This make file builds either 32-bit or 64-bit user programs. You can also use the <code>demo_procob.mk</code> make file to build 32-bit (or 31-bit) user programs. The following table shows the make files that you can use to build 32-bit (or 31-bit) and 64-bit user programs with Pro*COBOL:</p>
<div class="inftblhruleinformal">
<table class="HRuleInformal" title="Make Files for Use with Pro*COBOL" summary="This table lists the make files that you can use with Pro*C/C++ to build 31-bit, 32-bit, or 64-bit user programs" dir="ltr" border="1" width="100%" frame="hsides" rules="rows" cellpadding="3" cellspacing="0">
<col width="*" />
<col width="34%" />
<thead>
<tr align="left" valign="top">
<th align="left" valign="bottom" id="r1c1-t25">Platform</th>
<th align="left" valign="bottom" id="r1c2-t25">Make File</th>
</tr>
</thead>
<tbody>
<tr align="left" valign="top">
<td align="left" id="r2c1-t25" headers="r1c1-t25">AIX, HP-UX, Linux x86-64, Solaris, IBM: Linux on System z, and Linux x86</td>
<td align="left" headers="r2c1-t25 r1c2-t25"><code>demo_procob.mk</code></td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblhruleinformal" -->
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
The make file for more information about creating user programs</div>
<p>To create a program using the <code>demo_procob.mk</code> make file, run a command similar to the following:</p>
<pre xml:space="preserve" class="oac_no_warn">$ make -f demo_procob.mk <span class="italic">target</span> COBS="<span class="italic">cobfile1</span> <span class="italic">cobfile2</span> ..." EXE=<span class="italic">exename</span>
</pre>
<p>In this example:</p>
<ul>
<li>
<p><code><span class="codeinlineitalic">target</span></code> is the make file target that you want to use</p>
</li>
<li>
<p><code><span class="codeinlineitalic">cobfilen</span></code> is the COBOL source file for the program</p>
</li>
<li>
<p><code><span class="codeinlineitalic">exename</span></code> is the executable program</p>
</li>
</ul>
<p>For example, to create the program <code>myprog</code>, run one of the following commands, depending on the source and type of executable that you want to create:</p>
<ul>
<li>
<p>For COBOL source, dynamically linked with the client shared library, run the following command:</p>
<pre xml:space="preserve" class="oac_no_warn">$ make -f demo_procob.mk build COBS=myprog.cob EXE=myprog
</pre></li>
<li>
<p>For COBOL source, statically linked, run the following command:</p>
<pre xml:space="preserve" class="oac_no_warn">$ make -f demo_procob.mk build_static COBS=myprog.cob EXE=myprog
</pre></li>
<li>
<p>For COBOL source, dynamically loadable for use with <code>rtsora</code>, run the following command:</p>
<pre xml:space="preserve" class="oac_no_warn">$ make -f demo_procob.mk myprog.gnt
</pre></li>
</ul>
</div>
<!-- class="sect2" -->
<a id="BABJAFHH" name="BABJAFHH"></a><a id="UNXAR213" name="UNXAR213"></a>
<div class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><span class="secnum">6.4.5</span> FORMAT Precompiler Option<a id="sthref282" name="sthref282"></a><a id="sthref283" name="sthref283"></a></h3>
<p>The FORMAT precompiler option specifies the format of input lines for COBOL. If you specify the default value <code>ANSI</code>, then columns 1 to 6 contain an optional sequence number, column 7 indicates comments or continuation lines, paragraph names begin in columns 8 to 11, and statements begin in columns 12 to 72.</p>
<p>If you specify the value <code>TERMINAL</code>, then columns 1 to 6 are dropped, making column 7 the left most column.</p>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="i28565" name="i28565"></a><a id="UNXAR214" name="UNXAR214"></a>
<div class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1"><span class="secnum">6.5</span> Pro*FORTRAN Precompiler</h2>
<p>Before you use the Pro*FORTRAN precompiler, verify that the correct version of the compiler is installed. This section contains the following topics:</p>
<ul>
<li>
<p><a href="#i28568">Pro*FORTRAN Demonstration Programs</a></p>
</li>
<li>
<p><a href="#i28599">Pro*FORTRAN User Programs</a></p>
</li>
</ul>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a class="olink GINST" href="http://www.oracle.com/pls/db112/lookup?id=GINST"><span class="italic">Oracle Database Installation Guide</span></a> for information about supported compiler versions</p>
</li>
<li>
<p><a class="olink ZZFOR" href="http://www.oracle.com/pls/db112/lookup?id=ZZFOR"><span class="italic">Pro*FORTRAN Supplement to the Oracle Precompilers Guide</span></a> for information about the Pro*FORTRAN precompiler and interface features</p>
</li>
</ul>
</div>
<a id="i28568" name="i28568"></a><a id="UNXAR215" name="UNXAR215"></a>
<div class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><span class="secnum">6.5.1</span> Pro*FORTRAN Demonstration Programs<a id="sthref284" name="sthref284"></a><a id="sthref285" name="sthref285"></a></h3>
<p>Demonstration programs are provided to show the features of the Pro*FORTRAN precompiler. All demonstration programs are located in the <code>$ORACLE_HOME/precomp/demo/profor</code> directory. By default, all programs are dynamically linked with the client shared library.</p>
<p>To run the demonstration programs, the demonstration tables created by the <code>$ORACLE_HOME/sqlplus/demo/demobld.sql</code> script must exist in the SCOTT schema with the password TIGER.</p>
<div class="infoboxnote">
<p class="notep1">Note:</p>
You must unlock the SCOTT account and set the password before creating the demonstrations.</div>
<p>To create the demonstration programs, use the <code>demo_profor.mk</code> make file, located in the <code>$ORACLE_HOME/precomp/demo/profor</code> directory. For example, to precompile, compile, and link the <code>sample1</code> demonstration program, run the following command:</p>
<pre xml:space="preserve" class="oac_no_warn">$ make -f demo_profor.mk sample1
</pre>
<p>To create the Pro*FORTRAN demonstration programs, run the following command:</p>
<pre xml:space="preserve" class="oac_no_warn">$ make -f demo_profor.mk samples
</pre>
<p>Some demonstration programs require you to run a SQL script that is located in the <code>$ORACLE_HOME/precomp/demo/sql</code> directory. If you do not run the script, then a message prompting you to run it is displayed.</p>
<p>To build a demonstration program and run the corresponding SQL script, include the <code>make</code> macro argument <code>RUNSQL=run</code> on the command line. For example, to create the <code>sample11</code> demonstration program and run the required <code>$ORACLE_HOME/precomp/demo/sql/sample11.sql</code> script, run the following command:</p>
<pre xml:space="preserve" class="oac_no_warn">$ make -f demo_profor.mk sample11 RUNSQL=run
</pre>
<p>To create the Pro*FORTRAN demonstration programs and run all the required SQL scripts, run the following command:</p>
<pre xml:space="preserve" class="oac_no_warn">$ make -f demo_profor.mk samples RUNSQL=run
</pre></div>
<!-- class="sect2" -->
<a id="i28599" name="i28599"></a><a id="UNXAR216" name="UNXAR216"></a>
<div class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><span class="secnum">6.5.2</span> Pro*FORTRAN User Programs</h3>
<p>You can use the <code>$ORACLE_HOME/precomp/demo/profor/demo_profor.mk</code> make file to create user programs. This make file builds either 32-bit or 64-bit user programs. You can also use the <code>demo_profor_32.mk</code> make file to build 32-bit user programs. The following table shows the make files that you can use to build 32-bit and 64-bit user programs with Pro*FORTRAN:</p>
<div class="inftblhruleinformal">
<table class="HRuleInformal" title="Make Files for Use with Pro*FORTRAN" summary="This table lists the make files that you can use with Pro*C/C++ to build 31-bit, 32-bit, or 64-bit user programs" dir="ltr" border="1" width="100%" frame="hsides" rules="rows" cellpadding="3" cellspacing="0">
<col width="*" />
<col width="26%" />
<col width="34%" />
<thead>
<tr align="left" valign="top">
<th align="left" valign="bottom" id="r1c1-t29">Platform</th>
<th align="left" valign="bottom" id="r1c2-t29">64-bit Make File</th>
<th align="left" valign="bottom" id="r1c3-t29">32-Bit Make File</th>
</tr>
</thead>
<tbody>
<tr align="left" valign="top">
<td align="left" id="r2c1-t29" headers="r1c1-t29">AIX, HP-UX, and Solaris</td>
<td align="left" headers="r2c1-t29 r1c2-t29"><code>demo_profor.mk</code></td>
<td align="left" headers="r2c1-t29 r1c3-t29"><code>demo_profor_32.mk</code></td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblhruleinformal" -->
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
The make file for more information about creating user programs</div>
<p>To create a program using the <code>demo_proc.mk</code> make file, run a command similar to the following:</p>
<pre xml:space="preserve" class="oac_no_warn">$ make -f demo_profor.mk <span class="italic">target</span> FORS="<span class="italic">forfile1</span> <span class="italic">forfile2</span> ..." EXE=<span class="italic">exename</span>
</pre>
<p>In this example:</p>
<ul>
<li>
<p><code><span class="codeinlineitalic">target</span></code> is the make file target that you want to use</p>
</li>
<li>
<p><code><span class="codeinlineitalic">forfilen</span></code> is the FORTRAN source for the program</p>
</li>
<li>
<p><code><span class="codeinlineitalic">exename</span></code> is the executable program</p>
</li>
</ul>
<p>For example, to create the program <code>myprog</code> from the Pro*FORTRAN source file <code>myprog.pfo</code>, run one of the following commands, depending on the type of executable that you want to create:</p>
<ul>
<li>
<p>For an executable dynamically linked with the client shared library, run the following command:</p>
<pre xml:space="preserve" class="oac_no_warn">$ make -f demo_profor.mk build FORS=myprog.f EXE=myprog
</pre></li>
<li>
<p>For an executable statically linked with the client shared library, run the following command:</p>
<pre xml:space="preserve" class="oac_no_warn">$ make -f demo_profor.mk build_static FORS=myprog.f EXE=myprog
</pre></li>
</ul>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="CFAJDECA" name="CFAJDECA"></a><a id="UNXAR217" name="UNXAR217"></a>
<div class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1"><span class="secnum">6.6</span> SQL*Module for ADA<a id="sthref286" name="sthref286"></a></h2>
<div class="infoboxnote">
<p class="notep1">Note:</p>
The information in this section applies to the AIX platform.</div>
<p>Before using SQL*Module for Ada, verify that the correct version of the compiler is installed.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a class="olink GINST" href="http://www.oracle.com/pls/db112/lookup?id=GINST"><span class="italic">Oracle Database Installation Guide</span></a> for information about required compiler versions</p>
</li>
<li>
<p><a class="olink ZZMOD" href="http://www.oracle.com/pls/db112/lookup?id=ZZMOD"><span class="italic">Oracle SQL*Module for Ada Programmer's Guide</span></a> for information about SQL*Module for Ada</p>
</li>
</ul>
</div>
<p>This section contains the following topics:</p>
<ul>
<li>
<p><a href="#BABCDFFD">SQL*Module for Ada Demonstration Programs</a></p>
</li>
<li>
<p><a href="#BABEJAFG">SQL*Module for Ada User Programs</a></p>
</li>
</ul>
<a id="BABCDFFD" name="BABCDFFD"></a><a id="UNXAR218" name="UNXAR218"></a>
<div class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><span class="secnum">6.6.1</span> SQL*Module for Ada Demonstration Programs<a id="sthref287" name="sthref287"></a><a id="sthref288" name="sthref288"></a></h3>
<p>Demonstration programs are provided to show the features of SQL*Module for Ada. All demonstration programs are located in the <code>$ORACLE_HOME/precomp/demo/modada</code> directory. By default, all programs are dynamically linked with the client shared library.</p>
<p>To run the <code>ch1_drv</code> demonstration program, the demonstration tables created by the <code>$ORACLE_HOME/sqlplus/demo/demobld.sql</code> script must exist in the <code>SCOTT</code> schema with the password <code>TIGER</code>.</p>
<div class="infoboxnote">
<p class="notep1">Note:</p>
You must unlock the SCOTT account and set the password before creating the demonstrations.</div>
<p>The <code>demcalsp</code> and <code>demohost</code> demonstration programs require that the sample college database exists in the <code>MODTEST</code> schema. You can use the appropriate <code>make</code> command to create the <code>MODTEST</code> schema and load the sample college database.</p>
<p>Run the following command to create the SQL*Module for Ada demonstration programs, run the necessary SQL scripts to create the <code>MODTEST</code> user, and create the sample college database:</p>
<pre xml:space="preserve" class="oac_no_warn">$ make -f demo_modada.mk all RUNSQL=run
</pre>
<p>To create a single demonstration program (<code>demohost</code>) and run the necessary SQL scripts to create the <code>MODTEST</code> user, and create the sample college database, run the following command:</p>
<pre xml:space="preserve" class="oac_no_warn">$ make -f demo_modada.mk makeuser loaddb demohost RUNSQL=run
</pre>
<p>To create the SQL*Module for Ada demonstration programs, without re-creating the sample college database, run the following command:</p>
<pre xml:space="preserve" class="oac_no_warn">$ make -f demo_modada.mk samples
</pre>
<p>To create a single demonstration program (<code>demohost</code>), without re-creating the sample college database, run the following command:</p>
<pre xml:space="preserve" class="oac_no_warn">$ make -f demo_modada.mk demohost
</pre>
<p>To run the programs, you must define an Oracle Net connect string or alias named INST1_ALIAS that is used to connect to the database where the appropriate tables exist.</p>
</div>
<!-- class="sect2" -->
<a id="BABEJAFG" name="BABEJAFG"></a><a id="UNXAR219" name="UNXAR219"></a>
<div class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><span class="secnum">6.6.2</span> SQL*Module for Ada User Programs<a id="sthref289" name="sthref289"></a><a id="sthref290" name="sthref290"></a></h3>
<p>You can use the <code>$ORACLE_HOME/precomp/demo/modada/demo_modada.mk</code> make file to create user programs. To create a user program with the <code>demo_modada.mk</code> make file, run a command similar to the following:</p>
<pre xml:space="preserve" class="oac_no_warn">$ make -f demo_modada.mk ada OBJS="<span class="italic">module1</span> <span class="italic">module2</span> ..." \
EXE=<span class="italic">exename</span> MODARGS=<span class="italic">SQL_Module_arguments</span>
</pre>
<p>In this example:</p>
<ul>
<li>
<p><code><span class="codeinlineitalic">modulen</span></code> is a compiled Ada object</p>
</li>
<li>
<p><code><span class="codeinlineitalic">exename</span></code> is the executable program</p>
</li>
<li>
<p><code><span class="codeinlineitalic">SQL_Module_arguments</span></code> are the command-line arguments to be passed to the SQL*Module</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink ZZMOD" href="http://www.oracle.com/pls/db112/lookup?id=ZZMOD"><span class="italic">Oracle SQL*Module for Ada Programmer's Guide</span></a> for information about SQL*Module for Ada</div>
</li>
</ul>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="i37921" name="i37921"></a><a id="UNXAR220" name="UNXAR220"></a>
<div class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1"><span class="secnum">6.7</span> OCI and OCCI<a id="sthref291" name="sthref291"></a><a id="sthref292" name="sthref292"></a></h2>
<p>Before you use the Oracle Call Interface (OCI) or Oracle C++ Call Interface (OCCI), verify that the correct version of C or C++ is installed.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a class="olink GINST" href="http://www.oracle.com/pls/db112/lookup?id=GINST"><span class="italic">Oracle Database Installation Guide</span></a> for information about supported compiler versions</p>
</li>
<li>
<p><a class="olink LNOCI" href="http://www.oracle.com/pls/db112/lookup?id=LNOCI"><span class="italic">Oracle Call Interface Programmer's Guide</span></a> or <a class="olink LNCPP" href="http://www.oracle.com/pls/db112/lookup?id=LNCPP"><span class="italic">Oracle C++ Call Interface Programmer's Guide</span></a> for information about OCI and OCCI</p>
</li>
</ul>
</div>
<p>This section contains the following topics:</p>
<ul>
<li>
<p><a href="#BABIHHFH">OCI and OCCI Demonstration Programs</a></p>
</li>
<li>
<p><a href="#BABDGIDJ">OCI and OCCI User Programs</a></p>
</li>
</ul>
<a id="BABIHHFH" name="BABIHHFH"></a><a id="UNXAR221" name="UNXAR221"></a>
<div class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><span class="secnum">6.7.1</span> OCI and OCCI Demonstration Programs<a id="sthref293" name="sthref293"></a><a id="sthref294" name="sthref294"></a><a id="sthref295" name="sthref295"></a></h3>
<p>Demonstration programs that show the features of OCI and OCCI are provided with the software through the Oracle Database 11<span class="italic">g</span> Examples media. There are two types of demonstration programs: C and C++. All demonstration programs are located in the <code>$ORACLE_HOME/rdbms/demo</code> directory. By default, all programs are dynamically linked with the client shared library.</p>
<p>To run the demonstration programs, the programs require the demonstration tables created by the <code>$ORACLE_HOME/sqlplus/demo/demobld.sql</code> script to exist in the SCOTT schema with the password TIGER. Some demonstration programs require specific .sql files to be run, as mentioned in the demonstration source files. OCCI demonstration programs require occidemo.sql to be run.</p>
<div class="infoboxnote">
<p class="notep1">Note:</p>
You must unlock the SCOTT account and set the password before creating the demonstrations.</div>
<p>Use the <code>demo_rdbms.mk</code> make file, which is located in the <code>$ORACLE_HOME/rdbms/demo</code> directory, to create the demonstration programs. For example, to compile and link the <code>cdemo1</code> demonstration program, run the following command:</p>
<pre xml:space="preserve" class="oac_no_warn">$ make -f demo_rdbms.mk cdemo1
</pre>
<p>To create the C demonstration programs for OCI, run the following command:</p>
<pre xml:space="preserve" class="oac_no_warn">$ make -f demo_rdbms.mk demos
</pre>
<p>To create the C++ demonstration programs for OCCI, run the following command:</p>
<pre xml:space="preserve" class="oac_no_warn">$ make -f demo_rdbms.mk occidemos
</pre></div>
<!-- class="sect2" -->
<a id="BABDGIDJ" name="BABDGIDJ"></a><a id="UNXAR222" name="UNXAR222"></a>
<div class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><span class="secnum">6.7.2</span> OCI and OCCI User Programs<a id="sthref296" name="sthref296"></a><a id="sthref297" name="sthref297"></a><a id="sthref298" name="sthref298"></a><a id="sthref299" name="sthref299"></a></h3>
<p>You can use the <code>$ORACLE_HOME/rdbms/demo/demo_rdbms.mk</code> make file to build user programs. This make file builds either 32-bit or 64-bit user programs. You can also use the <code>demo_rdbms32.mk</code> to build 32-bit user programs on a 64-bit operating system. The following table shows the make files that you can use to build 32-bit and 64-bit user programs with Pro*FORTRAN:</p>
<div class="inftblhruleinformal">
<table class="HRuleInformal" title="Make Files for Use with Pro*FORTRAN" summary="This table lists the make files that you can use with Pro*C/C++ to build 31-bit, 32-bit, or 64-bit user programs" dir="ltr" border="1" width="100%" frame="hsides" rules="rows" cellpadding="3" cellspacing="0">
<col width="*" />
<col width="26%" />
<col width="34%" />
<thead>
<tr align="left" valign="top">
<th align="left" valign="bottom" id="r1c1-t37">Platform</th>
<th align="left" valign="bottom" id="r1c2-t37">64-bit Make File</th>
<th align="left" valign="bottom" id="r1c3-t37">32-Bit Make File</th>
</tr>
</thead>
<tbody>
<tr align="left" valign="top">
<td align="left" id="r2c1-t37" headers="r1c1-t37">AIX, HP-UX, Solaris, and Linux x86-64</td>
<td align="left" headers="r2c1-t37 r1c2-t37"><code>demo_rdbms.mk</code></td>
<td align="left" headers="r2c1-t37 r1c3-t37"><code>demo_rdbms32.mk</code></td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r3c1-t37" headers="r1c1-t37">Linux x86</td>
<td align="left" headers="r3c1-t37 r1c2-t37">NA</td>
<td align="left" headers="r3c1-t37 r1c3-t37"><code>demo_rdbms.mk</code></td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblhruleinformal" -->
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
The make file for more information about building user programs</div>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="CACCDAFI" name="CACCDAFI"></a><a id="UNXAR223" name="UNXAR223"></a>
<div class="sect1">
<h2 class="sect1"><span class="secnum">6.8</span> Oracle JDBC/OCI Programs with a 64-Bit Driver<a id="sthref300" name="sthref300"></a><a id="sthref301" name="sthref301"></a></h2>
<div class="infoboxnote">
<p class="notep1">Note:</p>
<ul>
<li>
<p>The information in this section applies to AIX, HP-UX, Linux x86-64, and Solaris platforms.</p>
</li>
<li>
<p>You can use the instructions and make files described in this section to create JDBC/OCI user programs that use a 64-bit driver.</p>
</li>
</ul>
</div>
<p>To run JDBC/OCI demonstration programs with a 64-bit driver:</p>
<ol>
<li>
<p>Add <code>$ORACLE_HOME/jdbc/lib/ojdbc5.jar</code> to the start of the <code>CLASSPATH</code> environment variable value for each of the following files:</p>
<pre xml:space="preserve" class="oac_no_warn">jdbc/demo/samples/jdbcoci/Makefile
jdbc/demo/samples/generic/Inheritance/Inheritance1/Makefile
jdbc/demo/samples/generic/Inheritance/Inheritance2/Makefile
jdbc/demo/samples/generic/Inheritance/Inheritance3/Makefile
jdbc/demo/samples/generic/JavaObject1/Makefile
jdbc/demo/samples/generic/NestedCollection/Makefile
</pre></li>
<li>
<p>In the <code>$ORACLE_HOME/jdbc/demo/samples/generic/Makefile</code> file, modify the JAVA and JAVAC variables to specify the JDK location and the <code>-d64</code> flag as follows:</p>
<pre xml:space="preserve" class="oac_no_warn">JAVA=${ORACLE_HOME}/java/bin/java -d64
JAVAC=${ORACLE_HOME}/java/bin/javac -d64
</pre></li>
<li>
<p>Set the <code>LD_LIBRARY_PATH_64</code> environment variable to include the <code>$ORACLE_HOME/lib</code> directory.</p>
<div class="infoboxnote">
<p class="notep1">Note:</p>
On AIX, the <code>LIBPATH</code> variable is the <code>LD_LIBRARY_PATH_64</code> variable equivalent. You must use the <code>LIBPATH</code> variable on AIX instead of the <code>LD_LIBRARY_PATH_64</code> variable.</div>
</li>
</ol>
</div>
<!-- class="sect1" -->
<a id="i26133" name="i26133"></a><a id="UNXAR224" name="UNXAR224"></a>
<div class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1"><span class="secnum">6.9</span> Custom Make Files<a id="sthref302" name="sthref302"></a></h2>
<p>Oracle recommends that you use the <code>demo_</code><code><span class="codeinlineitalic">product</span></code><code>.mk</code> make files provided with the software to create user programs as described in the product-specific sections of this chapter. If you modify the provided make file or if you choose to use a custom-written make file, then remember that the following restrictions apply:</p>
<ul>
<li>
<p>Do not modify the order of the Oracle libraries. Oracle libraries are included on the link line more than once so that all the symbols are resolved during linking.</p>
<p>Except for AIX, the order of the Oracle libraries is essential on all platforms for the following reasons:</p>
<ul>
<li>
<p>Oracle libraries are mutually referential. For example, functions in library A call functions in library B, and functions in library B call functions in library A.</p>
</li>
<li>
<p>The HP-UX linkers are one-pass linkers. The AIX, Linux, and Solaris linkers are two-pass linkers.</p>
</li>
</ul>
</li>
<li>
<p>Add the library to the beginning or to the end of the link line. Do not place user libraries between the Oracle libraries.</p>
</li>
<li>
<p>If you choose to use a <code>make</code> utility such as <code>nmake</code> or GNU <code>make</code>, then you must be aware of how macro and suffix processing differs from the <code>make</code> utility provided with the operating system. Oracle make files are tested and supported with the <code>make</code> utility.</p>
</li>
<li>
<p>Oracle library names and the contents of Oracle libraries are subject to change between releases. Always use the <code>demo_</code><code><span class="codeinlineitalic">product</span></code><code>.mk</code> make file that ships with the current release as a guide to determine the required libraries.</p>
</li>
</ul>
</div>
<!-- class="sect1" -->
<a id="i26152" name="i26152"></a><a id="UNXAR225" name="UNXAR225"></a>
<div class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1"><span class="secnum">6.10</span> Correcting Undefined Symbols<a id="sthref303" name="sthref303"></a></h2>
<p>Oracle provides the<a id="sthref304" name="sthref304"></a><a id="sthref305" name="sthref305"></a> <code>symfind</code> utility to assist you in locating a library or object file where a symbol is defined. When linking a program, undefined symbols are a common error that produce an error message similar to the following:</p>
<pre xml:space="preserve" class="oac_no_warn">$ make -f demo_proc.mk sample1
Undefined                       first referenced
 symbol                             in file
sqlcex                              sample1.o
sqlglm                              sample1.o
ld: irrecoverable: Symbol referencing errors. No output written to sample1
</pre>
<p>The error occurs when the linker cannot find a definition for a referenced symbol. If this error message is displayed, then verify that the library or object file containing the definition exists on the link line and that the linker is searching the correct directories for the file.</p>
<p>The following example shows the output from the <code>symfind</code> utility, which is used to locate the <code>sqlcex</code> symbol:</p>
<pre xml:space="preserve" class="oac_no_warn">$ symfind sqlcex

SymFind - Find Symbol &lt;sqlcex&gt; in &lt;**&gt;.a, .o, .so
------------------------------------------------------
Command:         /u01/app/oracle/product/11.2.0/bin/symfind sqlcex
Local Directory: /u01/app/oracle/product/11.2.0
Output File:     (none)
Note:            I do not traverse symbolic links
                 Use '-v' option to show any symbolic links

Locating Archive and Object files ...
[11645] |    467572|      44|FUNC |GLOB |0    |8      |sqlcex
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ ./lib/libclntsh.sl
[35]    |         0|      44|FUNC |GLOB |0    |5      |sqlcex
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ ./lib/libsql.a
</pre></div>
<!-- class="sect1" -->
<a id="i26193" name="i26193"></a><a id="UNXAR226" name="UNXAR226"></a>
<div class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1"><span class="secnum">6.11</span> Multithreaded Applications<a id="sthref306" name="sthref306"></a><a id="sthref307" name="sthref307"></a></h2>
<p>The Oracle libraries provided with this release are thread-safe, they support multithreaded applications.</p>
</div>
<!-- class="sect1" -->
<a id="i26199" name="i26199"></a><a id="UNXAR227" name="UNXAR227"></a>
<div class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1"><span class="secnum">6.12</span> Using Signal Handlers<a id="sthref308" name="sthref308"></a></h2>
<p>Oracle Database uses signals for two-task communication. Signals are installed in a user process when the process connects to the database and are removed when it disconnects.</p>
<p><a href="#g39972">Table 6-5</a> describes the signals that Oracle Database uses for two-task communication.</p>
<div class="tblformal">
<p class="titleintable"><a id="UNXAR228" name="UNXAR228"></a><a id="sthref309" name="sthref309"></a><a id="g39972" name="g39972"></a>Table 6-5 Signals for Two-Task Communication</p>
<table class="Formal" title="Signals for Two-Task Communication" summary="This table describes the signals for two-task communication" dir="ltr" border="1" width="100%" frame="hsides" rules="groups" cellpadding="3" cellspacing="0">
<col width="19%" />
<col width="*" />
<thead>
<tr align="left" valign="top">
<th align="left" valign="bottom" id="r1c1-t41">Signal</th>
<th align="left" valign="bottom" id="r1c2-t41">Description</th>
</tr>
</thead>
<tbody>
<tr align="left" valign="top">
<td align="left" id="r2c1-t41" headers="r1c1-t41">
<p>SIGCLD<a id="sthref310" name="sthref310"></a><a id="sthref311" name="sthref311"></a></p>
</td>
<td align="left" headers="r2c1-t41 r1c2-t41">
<p>The pipe driver uses SIGCLD, also referred to as SIGCHLD, when an Oracle process terminates. The operating system kernel sends a SIGCLD signal to the user process. The signal handler uses the <code>wait()</code> routine to determine if a server process died. The Oracle process does not catch SIGCLD; the user process catches it.</p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r3c1-t41" headers="r1c1-t41">
<p>SIGCONT<a id="sthref312" name="sthref312"></a><a id="sthref313" name="sthref313"></a></p>
</td>
<td align="left" headers="r3c1-t41 r1c2-t41">
<p>The pipe two-task driver uses SIGCONT to send out-of-band breaks from the user process to the Oracle process.</p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r4c1-t41" headers="r1c1-t41">
<p>SIGINT<a id="sthref314" name="sthref314"></a><a id="sthref315" name="sthref315"></a></p>
</td>
<td align="left" headers="r4c1-t41 r1c2-t41">
<p>Two-task drivers use SIGINT to detect user interrupt requests. The Oracle process does not catch SIGINT; the user process catches it.</p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r5c1-t41" headers="r1c1-t41">
<p>SIGIO<a id="sthref316" name="sthref316"></a><a id="sthref317" name="sthref317"></a></p>
</td>
<td align="left" headers="r5c1-t41 r1c2-t41">
<p>Oracle Net protocols use SIGIO to indicate incoming networking events.</p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r6c1-t41" headers="r1c1-t41">
<p>SIGPIPE<a id="sthref318" name="sthref318"></a><a id="sthref319" name="sthref319"></a></p>
</td>
<td align="left" headers="r6c1-t41 r1c2-t41">
<p>The pipe driver uses SIGPIPE to detect end-of-file on the communications channel. When writing to the pipe, if no reading process exists, then a SIGPIPE signal is sent to the writing process. Both the Oracle process and the user process catch SIGPIPE. SIGCLD is similar to SIGPIPE, but it applies only to user processes, not to Oracle processes.</p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r7c1-t41" headers="r1c1-t41">
<p>SIGTERM<a id="sthref320" name="sthref320"></a><a id="sthref321" name="sthref321"></a></p>
</td>
<td align="left" headers="r7c1-t41 r1c2-t41">
<p>The pipe driver uses SIGTERM to signal interrupts from the user to the Oracle process. This occurs when the user presses the interrupt key, <span class="bold">Ctrl+C</span>. The user process does not catch SIGTERM; the Oracle process catches it.</p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r8c1-t41" headers="r1c1-t41">
<p>SIGURG<a id="sthref322" name="sthref322"></a><a id="sthref323" name="sthref323"></a></p>
</td>
<td align="left" headers="r8c1-t41 r1c2-t41">
<p>Oracle Net TCP/IP drivers use SIGURG to send out-of-band breaks from the user process to the Oracle process.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" -->
<p>The listed signals affect all precompiler applications. You can install one signal handler for SIGCLD (or SIGCHLD) and SIGPIPE when connected to the Oracle process. If you call the <code>osnsui()</code> routine to set it up, then you can have multiple signal handles for SIGINT. For SIGINT, use <code>osnsui()</code> and <code>osncui()</code> to register and delete signal-catching routines.</p>
<p>You can also install as many signal handlers as you want for other signals. If you are not connected to the Oracle process, then you can have multiple signal handlers.<a id="sthref324" name="sthref324"></a><a id="sthref325" name="sthref325"></a><a id="sthref326" name="sthref326"></a></p>
<p><a href="#i36231">Example 6-1</a> shows how to set up a signal routine and a catching routine<a id="sthref327" name="sthref327"></a><a id="sthref328" name="sthref328"></a><a id="sthref329" name="sthref329"></a><a id="sthref330" name="sthref330"></a><a id="sthref331" name="sthref331"></a>.</p>
<div class="example">
<p class="titleinexample"><a id="i36231" name="i36231"></a><a id="UNXAR229" name="UNXAR229"></a>Example 6-1 Signal Routine and Catching Routine</p>
<pre xml:space="preserve" class="oac_no_warn">/* user side interrupt set */
word osnsui( /*_ word *handlp, void (*astp), char * ctx, _*/)
/*
** osnsui: Operating System dependent Network Set User-side Interrupt. Add an 
** interrupt handling procedure astp. Whenever a user interrupt(such as a ^C)
** occurs, call astp with argument ctx. Put in *handlp handle for this 
** handler so that it may be cleared with osncui. Note that there may be many
** handlers; each should be cleared using osncui. An error code is returned if
** an error occurs.
*/

/* user side interrupt clear */
word osncui( /*_ word handle _*/ );
/*
** osncui: Operating System dependent Clear User-side Interrupt. Clear the
** specified handler. The argument is the handle obtained from osnsui. An error
** code is returned if an error occurs.
*/
</pre>
<p><a href="#i36265">Example 6-2</a> shows how to use the <code>osnsui()</code> and the <code>osncui()</code> routines in an application program.</p>
</div>
<!-- class="example" -->
<div class="example">
<p class="titleinexample"><a id="i36265" name="i36265"></a><a id="UNXAR230" name="UNXAR230"></a>Example 6-2 osnsui() and osncui() Routine Template</p>
<pre xml:space="preserve" class="oac_no_warn">/*
** User interrupt handler template.
*/
void sig_handler()
{
...
}

main(argc, argv)
int arc;
char **argv; 
{

        int handle, err;
        ...

        /* Set up the user interrupt handler */
        if (err = osnsui(&amp;handle, sig_handler, (char *) 0))
        {
                /* If the return value is nonzero, then an error has occurred
                   Take appropriate action for the error. */
                ...
        }

        ...

        /* Clear the interrupt handler */
        if (err = osncui(handle))
        {
                /* If the return value is nonzero, then an error has occurred
                   Take appropriate action for the error. */
                ...
        }
        ...
}
</pre></div>
<!-- class="example" --></div>
<!-- class="sect1" -->
<a id="i26396" name="i26396"></a><a id="UNXAR231" name="UNXAR231"></a>
<div class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1"><span class="secnum">6.13</span> XA Functionality<a id="sthref332" name="sthref332"></a></h2>
<p>Oracle XA is the Oracle implementation of the<a id="sthref333" name="sthref333"></a> X/Open Distributed Transaction Processing XA interface. The XA standard specifies a bidirectional interface between resource managers that provide access to shared resources within transactions, and between a transaction service that monitors and resolves transactions.</p>
<p>Oracle Call Interface has XA functionality. When building a TP-monitor XA application, ensure that the TP-monitor libraries (that define the symbols <code>ax_reg</code> and <code>ax_unreg</code>) are placed in the link line before the Oracle client shared library. This link restriction is required when using the XA dynamic registration (Oracle XA switch <code>xaoswd</code>).</p>
<p>Oracle Database XA calls are defined in both the client shared library (<code>libclntsh.a</code>, <code>libclntsh.sl</code>, <code>libclntsh.so</code>, or <code>libclntsh.dylib</code> depending on the platform) and the client static library (<code>libclntst11.a</code>). These libraries are located in the <code>$ORACLE_HOME/lib</code> directory.</p>
</div>
<!-- class="sect1" --></div>
<!-- class="ind" -->
<div class="footer">
<hr />
<table class="simple oac_no_warn" summary="" cellspacing="0" cellpadding="0" width="100%">
<col width="33%" />
<col width="*" />
<col width="33%" />
<tr>
<td align="left">
<table class="simple oac_no_warn" summary="" cellspacing="0" cellpadding="0" width="98">
<tr>
<td align="center" valign="top"><a href="cnfg_net_srv.htm"><img width="24" height="24" src="../../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td align="center" valign="top"><a href="ldr_demo.htm"><img width="24" height="24" src="../../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td style="font-size: 90%" align="center" class="copyrightlogo"><img width="144" height="18" src="../../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;2006, 2011,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td align="right">
<table class="icons oac_no_warn" summary="" cellspacing="0" cellpadding="0" width="245">
<tr>
<td align="center" valign="top"><a href="../../index.htm"><img width="24" height="24" src="../../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td align="center" valign="top"><a href="../../nav/portal_booklist.htm"><img width="24" height="24" src="../../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td align="center" valign="top"><a href="toc.htm"><img width="24" height="24" src="../../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td align="center" valign="top"><a href="index.htm"><img width="24" height="24" src="../../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td align="center" valign="top"><a href="../../dcommon/html/feedback.htm"><img width="24" height="24" src="../../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
</div>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>
</body>
</html>
